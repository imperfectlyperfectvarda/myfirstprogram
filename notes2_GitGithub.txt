Terminal : allows us to manipulate the file structure using commands
ls:list commands
mkdir: make directory
cd project: change directory (it is like double clicking and going inside)
git init : initialized empty Git repository
-a: show files which are hidden
.git: any file that starts with . is hidden
touch ___: to create a new file ___
git status: shows the intracked files which means none will know that file is added or not. This command tells us these are all the changes which are not in the history of your project.
none knows about it.
git add __: to add the untracked file (the file will go in staging area)
git add .: to add all the untracked files
git config --global user.email vardajais13@gmail.com
git config --global user.name varda
ls -lart : to show files which are hidden
green shows staging

git commit 
vim opens
press I
Type message
Press Esc
type :wq and enter

git add -A: add all new files
git commit -m "message"
clear: to clean the terminal

If you want to go to last version
$ git checkout contact.html
Checkout means last commit se match karva do, to recover the files

git checkout -f : all files which were modified will be recovered to older commit version
git log : tells all the details about author and date
git log -p -no. of older log you want to see
git diff: ye meri working tree ko staging area se compare karega
staging area ko last commit se compare karna ho to: git diff --staged
git commit -a -m"message": sabko staging area ko skip krkr commit kr dia

Branch 
git branch _____ : create new branchs
git branch : shows all the branches and current branch
git checkout branchname: changes the branch to desired one
git merge branchname: to merge branch to the master branch
git checkout -b newbranchname: this will create new branch and also take us/switch in that branch(checkout)